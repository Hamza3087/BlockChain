version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: replantworld_postgres
    environment:
      POSTGRES_DB: replantworld
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - replantworld_network

  redis:
    image: redis:7-alpine
    container_name: replantworld_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - replantworld_network

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: replantworld_backend
    environment:
      - DEBUG=True
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=replantworld
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - REDIS_URL=redis://redis:6379/0
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,backend
    ports:
      - "8000:8000"
    volumes:
      - ../backend:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - replantworld_network
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

  frontend:   # ðŸ‘ˆ Now properly aligned
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: replantworld_frontend
    ports:
      - "3000:3000"
    volumes:
      - ../frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - replantworld_network
    environment:
      - VITE_API_URL=http://backend:8000
    user: "root"
    command: >
      sh -c "npm install && npm run dev -- --host 0.0.0.0"

volumes:
  postgres_data:
  redis_data:

networks:
  replantworld_network:
    driver: bridge
